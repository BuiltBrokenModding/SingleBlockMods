buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'org.ajoberstar:gradle-git:0.10.1'
    }
}

plugins {
  id 'com.matthewprenger.cursegradle' version '1.0.1'
  id 'net.saliman.cobertura' version '2.2.5'
  id 'com.github.kt3k.coveralls' version '2.0.1'
  id "com.github.johnrengelman.shadow" version "1.2.2"
}

apply from: 'https://raw.githubusercontent.com/BuiltBrokenModding/BuiltBrokenScripts/buildScripts/index.gradle'
apply plugin: 'forge'
apply plugin: 'curseforge'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'jacoco'

println "Current Minecraft version = " + minecraft.apiVersion
println archivesBaseName

def currentJvm = org.gradle.internal.jvm.Jvm.current()
println "Current Java version = " + currentJvm

import org.gradle.api.artifacts.*
subprojects.each { subproject -> evaluationDependsOn( subproject.path ) }

//task cleanUp{
//   delete '*/output'
//}

//task setupDecompWorkspaceAll(dependsOn:
//	  :cardboardBoxes.collect { ':' + it + ":setupDecompWorkspace" }
//	+ :coloredChests.collect { ':' + it + ":setupDecompWorkspace" }
//	+ :coloredPots.collect { ':' + it + ":setupDecompWorkspace" })

task assembleCB(type: Jar, dependsOn: [\
    ':cardboardBoxes:build',
    ]) {
	//archiveName="cardboardBoxes-1.7.10-${cardboardBoxesVersion}.jar"
	
	//from zipTree(project(":cardboardBoxes").jar.archivePath)
}
task assembleCC(type: Jar, dependsOn: [\
    ':coloredChests:build']) {
	//archiveName="coloredChests1.7.10-${cardboardBoxesVersion}.jar"
	
	//from zipTree(project(":coloredChests").jar.archivePath)
}

task assembleCP(type: Jar, dependsOn: [\
    ':coloredPots:build']){
	//archiveName="cardboardBoxes-1.7.10-${cardboardBoxesVersion}.jar"
	
	//from zipTree(project(":coloredPots").jar.archivePath)
}

task assembleRB(type: Jar, dependsOn: [\
    ':redbull:build']){
	//archiveName="cardboardBoxes-1.7.10-${cardboardBoxesVersion}.jar"
	
	//from zipTree(project(":redbull").jar.archivePath)
}

task assembleTD(type: Jar, dependsOn: [\
    ':teleportDoor:build']){}
    
task assembleTG(type: Jar, dependsOn: [\
    ':threadedGrass:build']){}

task assembleWB(type: Jar, dependsOn: [\
    ':woodenBucket:build']){}

task assembleWR(type: Jar, dependsOn: [\
    ':woodenRails:build']) {}

task assembleWS(type: Jar, dependsOn: [\
    ':woodenShears:build']){}
    
task copyMethodCB(type: Copy) {
    from 'cardboardBoxes/output'
    into 'output'
    include '*.jar'
    exclude { details -> details.file.name.endsWith('.html') &&
                         details.file.text.contains('staging') }
    mustRunAfter "assembleCB"
}

copyMethodCB.dependsOn assembleCB

task copyMethodCC(type: Copy) {
    from 'coloredChests/output'
    into 'output'
    include '*.jar'
    exclude { details -> details.file.name.endsWith('.html') &&
                         details.file.text.contains('staging') }
    mustRunAfter "assembleCB"
}

copyMethodCC.dependsOn assembleCC

task copyMethodCP(type: Copy) {
    from 'coloredPots/output'
    into 'output'
    include '*.jar'
    exclude { details -> details.file.name.endsWith('.html') &&
                         details.file.text.contains('staging') }
    mustRunAfter "assembleCB"
}

copyMethodCP.dependsOn assembleCP

task copyMethodRB(type: Copy) {
    from 'redbull/output'
    into 'output'
    include '*.jar'
    exclude { details -> details.file.name.endsWith('.html') &&
                         details.file.text.contains('staging') }
    mustRunAfter "assembleCB"
}

copyMethodRB.dependsOn assembleRB

task copyMethodTD(type: Copy) {
    from 'teleportDoor/output'
    into 'output'
    include '*.jar'
    exclude { details -> details.file.name.endsWith('.html') &&
                         details.file.text.contains('staging') }
    mustRunAfter "assembleCB"
}

copyMethodTD.dependsOn assembleTD

task copyMethodTG(type: Copy) {
    from 'threadedGrass/output'
    into 'output'
    include '*.jar'
    exclude { details -> details.file.name.endsWith('.html') &&
                         details.file.text.contains('staging') }
    mustRunAfter "assembleCB"
}

copyMethodTG.dependsOn assembleTG

task copyMethodWB(type: Copy) {
    from 'woodenBucket/output'
    into 'output'
    include '*.jar'
    exclude { details -> details.file.name.endsWith('.html') &&
                         details.file.text.contains('staging') }
    mustRunAfter "assembleCB"
}

copyMethodWB.dependsOn assembleWB

task copyMethodWR(type: Copy) {
    from 'woodenRails/output'
    into 'output'
    include '*.jar'
    exclude { details -> details.file.name.endsWith('.html') &&
                         details.file.text.contains('staging') }
    mustRunAfter "assembleCB"
}

copyMethodWR.dependsOn assembleWR

task copyMethodWS(type: Copy) {
    from 'woodenShears/output'
    into 'output'
    include '*.jar'
    exclude { details -> details.file.name.endsWith('.html') &&
                         details.file.text.contains('staging') }
    mustRunAfter "assembleCB"
}

copyMethodWS.dependsOn assembleWS

task assembleAll(dependsOn: [
    copyMethodCB,
    copyMethodCC,
    copyMethodCP,
    copyMethodRB,
    copyMethodTD,
    copyMethodTG,
    copyMethodWB,
    copyMethodWR,
    copyMethodWS]
) {
}
	
jar {
    manifest.mainAttributes(
            "Built-By": System.getProperty('user.name'),
            "Created-By": currentJvm,
            "Implementation-Title": archivesBaseName,
            "Implementation-Version": project.version,
    )
}